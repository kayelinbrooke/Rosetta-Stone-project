#subs_subset3 <- select(subs_subset3,-c("ID")) # drop ID column, not needed in cluster
subs_subset3  <- data.frame(s,newdata2) # combine new encoded vars with the df
subs_subset3 <- select(subs_subset3, -ID)
require(plyr)
subs_subset3[,18:27] <- colwise(as.factor)(subs_subset3[,18:27])
is.factor(subs_subset3[,18:27])
# apply k-prototyps
kpres <- kproto(subs_subset3,5, na.rm = FALSE)
#clprofiles(kpres, subs_subset3)
subs_subset3$cluster = kpres$cluster
View(subs_subset3)
ggplot(subs_subset3, aes(cluster))+
geom_bar()
ggplot(subs_subset3, aes(cluster, fill = Currency.USD))+
geom_bar(position = 'fill')
newdf <- select(subs_subset,c("Language","Currency","Country","Lead.Platform"))
newdf2 <- cbind(newdf,subs_subset3)
View(newdf2)
ggplot(newdf2, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
#--------------------------#
remove(list = ls())
library(tidyverse)
library(forcats)
library(zoo)
library(factoextra)
library(cluster)
library(scales)
library(mondate)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
# import new data
subs <- read.csv("/Users/kksizzle/Desktop/MGSC 410/final project/Rosetta (1).csv")
# subset data
set.seed(310)
subs_indx <-  sample(1:nrow(subs), 0.2*nrow(subs), replace=FALSE)
subs_subset <- subs[subs_indx,]
#---------------- Rearange Data ----------------#
# dummy variables
subs_subset$Subscription.Type <- ifelse(subs_subset$Subscription.Type == 'Limited', 1, 0)
subs_subset$Subscription.Event.Type <- ifelse(subs_subset$Subscription.Event.Type == '	INITIAL_PURCHASE', 1, 0)
subs_subset$Purchase.Store <- ifelse(subs_subset$Purchase.Store == 'Web', 1, 0)
subs_subset$Demo.User <- ifelse(subs_subset$Demo.User == 'No', 1, 0)
subs_subset$Free.Trial.User <- ifelse(subs_subset$Free.Trial.User == 'No', 1, 0)
subs_subset$Auto.Renew <- ifelse(subs_subset$Auto.Renew == 'No', 1, 0)
subs_subset$User.Type <- ifelse(subs_subset$User.Type == 'Consumer', 1, 0)
subs_subset$Email.Subscriber <- ifelse(subs_subset$Email.Subscriber == 'No', 1, 0)
subs_subset$Push.Notifications <- ifelse(subs_subset$Push.Notifications == 'No', 1, 0)
# one hot encoding
onehotdf <- subs_subset[ , c("ID","Currency","Country","Lead.Platform")] # new df for categorical vars
subs_subset1 <- select(subs_subset,-c("Language","Currency","Country","Lead.Platform",
"Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration")) # new df for w/out cat. vars. + sub/trial dates cols
# one-hot coding
library(caret)
dummies <- dummyVars(" ~ .", onehotdf)
onehotdfdummies <- data.frame(predict(dummies, newdata = onehotdf))
library(tidyverse)
#--------------------------#
remove(list = ls())
library(forcats)
library(zoo)
library(factoextra)
library(cluster)
library(scales)
library(mondate)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
# import new data
subs <- read.csv("/Users/kksizzle/Desktop/MGSC 410/final project/Rosetta (1).csv")
# subset data
set.seed(310)
subs_indx <-  sample(1:nrow(subs), 0.2*nrow(subs), replace=FALSE)
subs_subset <- subs[subs_indx,]
#---------------- Rearange Data ----------------#
# dummy variables
subs_subset$Subscription.Type <- ifelse(subs_subset$Subscription.Type == 'Limited', 1, 0)
subs_subset$Subscription.Event.Type <- ifelse(subs_subset$Subscription.Event.Type == '	INITIAL_PURCHASE', 1, 0)
subs_subset$Purchase.Store <- ifelse(subs_subset$Purchase.Store == 'Web', 1, 0)
subs_subset$Demo.User <- ifelse(subs_subset$Demo.User == 'No', 1, 0)
subs_subset$Free.Trial.User <- ifelse(subs_subset$Free.Trial.User == 'No', 1, 0)
subs_subset$Auto.Renew <- ifelse(subs_subset$Auto.Renew == 'No', 1, 0)
subs_subset$User.Type <- ifelse(subs_subset$User.Type == 'Consumer', 1, 0)
subs_subset$Email.Subscriber <- ifelse(subs_subset$Email.Subscriber == 'No', 1, 0)
subs_subset$Push.Notifications <- ifelse(subs_subset$Push.Notifications == 'No', 1, 0)
# one hot encoding
onehotdf <- subs_subset[ , c("ID","Currency","Country","Lead.Platform")] # new df for categorical vars
subs_subset1 <- select(subs_subset,-c("Language","Currency","Country","Lead.Platform",
"Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration")) # new df for w/out cat. vars. + sub/trial dates cols
# one-hot coding
library(caret)
dummies <- dummyVars(" ~ .", onehotdf)
onehotdfdummies <- data.frame(predict(dummies, newdata = onehotdf))
subs_subset2  <- data.frame(subs_subset1,onehotdfdummies) # combine new encoded vars with the df
subs_subset2 <- select(subs_subset2, -ID) # drop ID column, not needed in cluster
#factor one-hot dummies {so that it works with kproto()}
require(plyr)
subs_subset2[,18:27] <- colwise(as.factor)(subs_subset2[,18:27])
#install.packages("clustMixType")
library(clustMixType)
# Check for  optimal number of clusters
mydata <- subs_subset2
wss<-vector()
for (i in 2:15){ wss[i] <- sum(kproto(subs_subset2, i,na.rm = FALSE)$withinss)}
par(mfrow=c(1,1))
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
# apply k-prototyps
kpres <- kproto(subs_subset2, 5, na.rm = FALSE)
#new df to make grpahs and plots
subs_subset2$cluster = kpres$cluster # add cluster column to df
newdf <- select(subs_subset,c("Language","Currency","Country","Lead.Platform"))
newdf2 <- cbind(newdf,subs_subset2)
ggplot(newdf2, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
# apply k-prototyps
kpres <- kproto(subs_subset2, 5, na.rm = FALSE, lambda = lambdaest(subs_subset2))
kpres2 <- kproto(subs_subset2, 5, na.rm = FALSE, keep.data = TRUE)
validation_kproto(
method = silhouette(),
object = kpres2,
data = NULL,
k = NULL,
lambda = NULL,
kp_obj = "optimal")
validation_kproto(
method = silhouette)
validation_kproto(method = silhouette, object = kpres2)
validation_kproto(method = 'silhouette', object = kpres2)
val <- validation_kproto(method = "silhouette", data = subs_subset3, k = 2:10)
val <- validation_kproto(method = "silhouette", data = subs_subset2, k = 2:10)
val <- validation_kproto(method = "silhouette",
data = subs_subset2,
k = 2:10, na.rm = FALSE)
# colors for graphs
mycolor <-  c("#1B7837","#A6DBA0","#C2A5CF")
# cluster plot
clusplot(subs_subset2,
subs_subset2$cluster,
color = TRUE,
shade = FALSE)
# cluster plot
clusplot(subs_subset2,
subs_subset2$cluster,
shade = FALSE)
?clusplot
fviz_cluster(kpres, subs_subset2, geom = "point", ellipse.type = "norm") +
scale_color_manual(values = mycolor)+
scale_fill_manual(values = mycolor)
View(kpres)
clprofiles(kpres, subs_subset2)
View(subs_subset2)
df <- select(subs_subset, -c("Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration"))
df <- select(subs_subset, -c("ID","Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration"))
df$cluster = kpres$cluster
View(df)
ggplot(df, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
ggplot(df, aes(Purcahse.Amount,sub_len_month, color = cluster))+
geom_point()
ggplot(df, aes(Purchase.Amount,sub_len_month, color = cluster))+
geom_point()
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = cluster))+
geom_point()
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = cluster))+
geom_point()+
scale_color_manual(values = mycolor) +
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_y_continuous(labels = ks)
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = cluster))+
geom_point()+
scale_color_manual(values = mycolor) +
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/1000000,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = cluster))+
geom_point()+
scale_color_manual(values = mycolor) +
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_y_continuous(labels = ks)
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
scale_color_manual(values = mycolor) +
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_y_continuous(labels = ks)
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
scale_color_manual(values = mycolor) +
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_y_continuous(labels = ks)
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/100000,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/10000,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/1000,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/100,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/10,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/1000000,
suffix = "M",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
# function to turn axis to millions
ks <- function (x) { number_format(accuracy = 1,
scale = 1/1000000,
prefix = "$",
big.mark = ",")(x) }
ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
g + coord_cartesian(xlim = c(10,25),ylim= c(3,5))
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster") +
scale_x_continuous(labels = ks)
g + coord_cartesian(xlim = c(10,25),ylim= c(3,5))
g + coord_cartesian(xlim = c(0,25))
g + coord_cartesian(xlim = c(0,50))
g + coord_cartesian(xlim = c(0,20))
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
View(g)
g
g + coord_cartesian(xlim = c(0,20))
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")+
options(scipen=999)
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
g + coord_cartesian(xlim = c(0,15))
new_subs <- subs[subs_indx,]
df <- select(new_subs, -c("ID","Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration"))
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
g + coord_cartesian(xlim = c(0,15))
g
df$cluster = kpres$cluster
g + coord_cartesian(xlim = c(0,15))
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
g + coord_cartesian(xlim = c(0,15))
ggplot(df, aes(cluster, fill = Subscription.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = Subscription.Type))+
geom_bar(position = 'fill') +
facet_wrap(~User.Type, scale = 'free')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Type, scale = 'free')
#--------------------------#
remove(list = ls())
library(forcats)
library(zoo)
library(factoextra)
library(cluster)
library(scales)
library(mondate)
library(RColorBrewer)
library(ggplot2)
library(dplyr)
# import new data
subs <- read.csv("/Users/kksizzle/Desktop/MGSC 410/final project/Rosetta (1).csv")
# subset data
set.seed(310)
subs_indx <-  sample(1:nrow(subs), 0.2*nrow(subs), replace=FALSE)
subs_subset <- subs[subs_indx,]
#---------------- Rearange Data ----------------#
# dummy variables
subs_subset$Subscription.Type <- ifelse(subs_subset$Subscription.Type == 'Limited', 1, 0)
subs_subset$Subscription.Event.Type <- ifelse(subs_subset$Subscription.Event.Type == '	INITIAL_PURCHASE', 1, 0)
subs_subset$Purchase.Store <- ifelse(subs_subset$Purchase.Store == 'Web', 1, 0)
subs_subset$Demo.User <- ifelse(subs_subset$Demo.User == 'No', 1, 0)
subs_subset$Free.Trial.User <- ifelse(subs_subset$Free.Trial.User == 'No', 1, 0)
subs_subset$Auto.Renew <- ifelse(subs_subset$Auto.Renew == 'No', 1, 0)
subs_subset$User.Type <- ifelse(subs_subset$User.Type == 'Consumer', 1, 0)
subs_subset$Email.Subscriber <- ifelse(subs_subset$Email.Subscriber == 'No', 1, 0)
subs_subset$Push.Notifications <- ifelse(subs_subset$Push.Notifications == 'No', 1, 0)
# one hot encoding
onehotdf <- subs_subset[ , c("ID","Currency","Country","Lead.Platform")] # new df for categorical vars
subs_subset1 <- select(subs_subset,-c("Language","Currency","Country","Lead.Platform",
"Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration")) # new df for w/out cat. vars. + sub/trial dates cols
# one-hot coding
library(caret)
dummies <- dummyVars(" ~ .", onehotdf)
onehotdfdummies <- data.frame(predict(dummies, newdata = onehotdf))
subs_subset2  <- data.frame(subs_subset1,onehotdfdummies) # combine new encoded vars with the df
subs_subset2 <- select(subs_subset2, -ID) # drop ID column, not needed in cluster
#factor one-hot dummies {so that it works with kproto()}
require(plyr)
subs_subset2[,18:27] <- colwise(as.factor)(subs_subset2[,18:27])
#install.packages("clustMixType")
library(clustMixType)
# Check for  optimal number of clusters
mydata <- subs_subset2
wss<-vector()
for (i in 2:15){ wss[i] <- sum(kproto(subs_subset2, i,na.rm = FALSE)$withinss)}
par(mfrow=c(1,1))
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
# apply k-prototyps
kpres <- kproto(subs_subset2, 5, na.rm = FALSE)
subs_subset2$cluster = kpres$cluster  # add cluster column to df
# new df to make graphs and plots
new_subs <- subs[subs_indx,]
df <- select(new_subs, -c("ID","Subscription.Start.Date","Subscription.Expiration",
"Free.Trial.Start.Date", "Free.Trial.Expiration"))
df$cluster = kpres$cluster # add cluster column to df
ggplot(df, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
View(df)
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Type, scale = 'free')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = Subscription.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Type, scale = 'free')
ggplot(df, aes(cluster, fill = Subscription.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Type, scale = 'free')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Event.Type, scale = 'free')
ggplot(df, aes(cluster, fill = Subscription.Event.Type))+
geom_bar(position = 'fill')
100-45
ggplot(df, aes(sub-len_mnth, fill = cluster))+
geom_historgram(position = 'fill')
ggplot(df, aes(sub-len_mnth, fill = cluster))+
geom_hist(position = 'fill')
ggplot(df, aes(sub-len_mnth, fill = cluster))+
geom_histogram(position = 'fill')
ggplot(df, aes(sub_len_mnth, fill = cluster))+
geom_histogram(position = 'fill')
ggplot(df, aes(sub_len_mnth, fill = cluster))+
geom_histogram()
ggplot(df, aes(sub_len_mnth, fill = cluster))+
geom_histogram(bins = 20)
ggplot(df, aes(sub_len_mnth, fill = cluster))+
geom_histogram(bins = 20)
ggplot(df, aes(sub_len_mnth, fill = cluster))+
geom_histogram(bins = 10)
ggplot(df, aes(sub_len_mnth, color = cluster))+
geom_histogram(bins = 10)
geom_histogram(bins = 10, fill + cluster)
geom_histogram(bins = 10, fill = cluster)
geom_histogram(bins = 10, fill = "cluster")
geom_histogram(bins = 10)
ggplot(df, aes(sub_len_mnth))+
geom_histogram(bins = 10)
ggplot(df, aes(sub_len_mnth))+
geom_histogram(bins = 10, fill=cluster)
ggplot(df, aes(sub_len_mnth))+
geom_histogram(bins = 10, color=cluster)
?geom_histogram
ggplot(df, aes(sub_len_mnth, color=cluster))+
geom_histogram(bins = 10)
?geom_histogram
ggplot(df, aes(sub_len_mnth, fill=cluster))+
geom_histogram(bins = 10)
ggplot(df, aes(sub_len_mnth, fill=cluster))+
geom_histogram(bins = 10, position = 'fill')
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
g + coord_cartesian(xlim = c(0,15))
g
g + coord_cartesian(xlim = c(0,15))
clprofiles(kpres, subs_subset2)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares",
main="Assessing the Optimal Number of Clusters with the Elbow Method",
pch=20, cex=2)
# save df to csv for tableau
write.csv(df,"/Users/kksizzle/Desktop/MGSC 410/final project/clusters.csv", row.names = FALSE)
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
?write.csv
?write.csv
# save df to csv for tableau
write.csv(df,"/Users/kksizzle/Desktop/MGSC 410/final project/clusters2.csv")
# save df to csv for tableau
write.csv(df,"/Users/kksizzle/Desktop/MGSC 410/final project/clusters.csv")
ggplot(df, aes(cluster, fill = Currency))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = Subscription.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Type, scale = 'free')
ggplot(df, aes(cluster, fill = Subscription.Event.Type))+
geom_bar(position = 'fill')
ggplot(df, aes(cluster, fill = User.Type))+
geom_bar(position = 'fill') +
facet_wrap(~Subscription.Event.Type, scale = 'free')
g <- ggplot(df, aes(Purchase.Amount,sub_len_mnth, color = as.factor(cluster)))+
geom_point()+
labs(x = "Purchase Amount", y = "Subscription Length (Months)",
title = "Purchase Amount vs Subscription Length (Months)", color = "Cluster")
g
g + coord_cartesian(xlim = c(0,15))
clprofiles(kpres, subs_subset2)
#install.packages("clustMixType")
library(clustMixType)
clprofiles(kpres, subs_subset2)
